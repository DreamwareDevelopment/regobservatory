generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters", "postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  directUrl  = env("UNPOOLED_DATABASE_URL")
  extensions = [vector]
}

model ApplicationState {
  id                 String  @id
  nextProcessingDate String? @map("next_processing_date")
  runUntil           String? @map("run_until") // Development field to have reduced record fetching/processing
  isCaughtUp         Boolean @default(false) @map("is_caught_up")

  @@map("application_state")
}

model Agency {
  id            String  @id @default(uuid())
  name          String
  shortName     String? @map("short_name")
  displayName   String  @map("display_name")
  sortableName  String  @map("sortable_name")
  slug          String  @unique

  // CFR references as JSON
  cfrReferences Json[]  @map("cfr_references")

  // Self-relation for parent/child hierarchy
  parentId    String?   @map("parent_id")
  parent      Agency?   @relation("AgencyHierarchy", fields: [parentId], references: [id])
  children    Agency[]  @relation("AgencyHierarchy")

  content     AgencyContent?
  embeddings  AgencyEmbedding[]
  history     AgencyHistory[]

  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  @@map("agencies")
}

model AgencyContent {
  id        String   @id @default(uuid())
  agencyId  String   @unique
  agency    Agency   @relation(fields: [agencyId], references: [id])
  content   Json[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("agency_contents")
}

model AgencyEmbedding {
  id         String  @id @default(uuid())
  agencyId   String
  agency     Agency @relation(fields: [agencyId], references: [id])
  text       String
  title      Int
  identifier String
  type       String
  embedding  Unsupported("vector(1536)")
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("agency_embeddings")
}

model AgencyHistory {
  id        String   @id @default(uuid())
  agencyId  String
  agency    Agency   @relation(fields: [agencyId], references: [id])
  wordCount Int
  date      DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("agency_history")
}
